import { DataOptions, DataTableHeader } from 'vuetify'
import { $silentAxios, createAxiosFromConfig } from '~/utils/api'
import { AxiosOption } from '~/types';
import { BaseService } from '~/services/base-service';

const $MODEL_NAME$Service = {
  async fetch$MODEL_NAME$ (options: DataOptions, keyword: string, headers: DataTableHeader[], params?: any, action?: any) {
    return BaseService.fetchData('/$MODEL_NAME_PLURAL_DASHED$', options, keyword, headers, params, action)
  },

  async loadCreate$MODEL_NAME$Option (params: any) {
    return await $silentAxios.get('/$MODEL_NAME_PLURAL_DASHED$/create', {
      params
    })
  },

  async loadUpdate$MODEL_NAME$Option (id: any, params: any) {
    return await $silentAxios.get(`/$MODEL_NAME_PLURAL_DASHED$/${id}/edit`, {
      params
    })
  },

  async addNew$MODEL_NAME$ (data: any, axiosOpts?: AxiosOption) {
    const axios = createAxiosFromConfig(axiosOpts)
    return await axios.post('/$MODEL_NAME_PLURAL_DASHED$', data)
  },

  async update$MODEL_NAME$ (id: any, data: any, axiosOpts?: AxiosOption) {
    const axios = createAxiosFromConfig(axiosOpts)
    return await axios.put(`/$MODEL_NAME_PLURAL_DASHED$/${id}`, data)
  },

  async delete$MODEL_NAME$ (id: any, axiosOpts?: AxiosOption) {
    const axios = createAxiosFromConfig(axiosOpts)
    return await axios.delete(`/$MODEL_NAME_PLURAL_DASHED$/${id}`)
  },

  async delete$MODEL_NAME_PLURAL$ (ids: any[], axiosOpts?: AxiosOption) {
    const axios = createAxiosFromConfig(axiosOpts)
    return await axios.delete(`/$MODEL_NAME_PLURAL_DASHED$/batch`, {
      data: {
        items: ids
      }
    })
  },
}

export default $MODEL_NAME$Service
